@page "/tecajna-lista"
@using System.Net.Http.Json

<h1>Tečajna lista</h1>

@if (valute == null)
{
    <p>Učitavanje tečajne liste...</p>
}
else
{
    <table>
        <thead>
            <tr>
                <th>Broj tečajnice</th>
                <th>Datum primjene</th>
                <th>Država</th>
                <th>Država ISO</th>
                <th>Šifra valute</th>
                <th>Valuta</th>
                <th>Kupovni tečaj</th>
                <th>Srednji tečaj</th>
                <th>Prodajni tečaj</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var valuta in valute)
            {
            <tr>
                <td>@valuta.broj_tecajnice</td>
                <td>@valuta.datum_primjene.ToShortDateString()</td>
                <td>@valuta.drzava</td>
                <td>@valuta.drzava_iso</td>
                <td>@valuta.sifra_valute</td>
                <td>@valuta.valuta</td>
                <td>@valuta.kupovni_tecaj</td>
                <td>@valuta.srednji_tecaj</td>
                <td>@valuta.prodajni_tecaj</td>>
            </tr>
            }
        </tbody>
    </table>

    <div>
        <label for="iznos-eura">Unesite iznos u eurima:</label>
        <input id="iznos-eura" type="number" @bind-value="iznosEura" />
    </div>

    <div>
        <label>Rezultat:</label>
        <p>@iznosPLN PLN</p>
        <p>@iznosUSD USD</p>
    </div>
}

@code {
    private List<Valuta> valute;
    private decimal iznosEura = 0;
    private decimal iznosPLN = 0;
    private decimal iznosUSD = 0;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var httpClient = new HttpClient();
            valute = await httpClient.GetFromJsonAsync<List<Valuta>>("https://api.hnb.hr/tecajn-eur/v3?valuta=AUD&valuta=USD");

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void Izracunaj()
    {
        if (iznosEura > 0 && valute != null)
        {
            var eurTecaj = valute.Find(v => v.sifra_valute == "EUR").srednji_tecaj;
            var plnTecaj = valute.Find(v => v.sifra_valute == "PLN").srednji_tecaj;
            var usdTecaj = valute.Find(v => v.sifra_valute == "USD").srednji_tecaj;
            decimal eur;
            decimal pln;
            decimal usd;
            decimal.TryParse(eurTecaj, out eur);
            decimal.TryParse(plnTecaj, out pln);
            decimal.TryParse(usdTecaj, out usd);

            iznosPLN = Math.Round(iznosEura * pln / eur, 2);
            iznosUSD = Math.Round(iznosEura * usd / eur, 2);
        }
    }

    public class Valuta
    {
        public string broj_tecajnice { get; set; }
        public DateTime datum_primjene { get; set; }
        public string drzava { get; set; }
        public string drzava_iso { get; set; }
        public string sifra_valute { get; set; }
        public string valuta { get; set; }
        public string kupovni_tecaj { get; set; }
        public string srednji_tecaj { get; set; }
        public string prodajni_tecaj { get; set; }
    }
}
